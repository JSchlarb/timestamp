replicaCount: 1

kafka:
  clusterName: kafka-lfg
  producerTopics: [ ]
  consumerTopics: [ ]

appConfig:
  management:
    security:
      enabled: false
    endpoint:
      health:
        probes:
          enabled: true
    health:
      livenessState:
        enabled: true
      readinessState:
        enabled: true
  spring:
    config:
      import: configtree:/mnt/secret/kafka-credentials/
    kafka:
      bootstrap-servers: kafka-lfg-kafka-bootstrap:9093
      security:
        protocol: SSL
      ssl:
        key-store-type: PKCS12
        key-store-location: file:///mnt/secret/kafka-credentials/user.p12
        key-store-password: ${user.password}
        truststore-type: PEM
        trust-store-location: file:///mnt/secret/kafka-cluster-ca/ca.crt

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  enabled: false
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


nodeSelector: { }

tolerations: [ ]

affinity: { }
